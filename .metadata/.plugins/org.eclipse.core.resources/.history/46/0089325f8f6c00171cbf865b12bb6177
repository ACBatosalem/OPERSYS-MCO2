package caltrain;

import java.util.ArrayList;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class Main extends Application{
	
	private boolean loadTrainReturned = false;
	private int threadsCompleted = 0;
	private int totalNumSeats = 0;
	private int totalPassServed = 0;

	@Override
	public void start(Stage window) throws Exception {
		
		Pane layout = new Pane();
		
		Scene scene = new Scene(layout, 500, 500);
		
		TrainAnimation t = new TrainAnimation(scene);
		TrainAnimation t2 = new TrainAnimation(scene);
		
		layout.getChildren().add(t.getTrain());
		layout.getChildren().add(t2.getTrain());
		
		
		window.setScene(scene);
		window.show();
		
	}
	
	private void initializeLogic(){
		CalTrain ctrain = new CalTrain();
		ArrayList<Station> allStations = new ArrayList<Station>();
		ArrayList<Train> allTrains = new ArrayList<Train>();

		/* Initialize Stations */
		for(int i=0;i<8;i++) {
			allStations.add(ctrain.station_init(i));
			if (i >= 1 && i < 8) {
				allStations.get(i-1).setRightStation(allStations.get(i));
				allStations.get(i).setLeftStation(allStations.get(i-1));
			}
		}
		System.out.println();
		
		/* Initialize Passengers */
		int totalPassengers = 0;
		int passengersLeft = totalPassengers;
		int passengersServed = totalPassengers;
		for(int i=0;i<totalPassengers;i++) {
			int inStatNum = (int)Math.floor(Math.random()*8);
			Passenger robot = new Passenger(allStations.get(inStatNum), ctrain, i, allStations.get(CalTrainDriver.outStat(inStatNum)));
			threadsCompleted++;
			try {Thread.sleep(300);} catch(Exception e){}
		}
	}
	
	private int outStat(int num) {
		int number = (int)Math.floor(Math.random()*8);
		return (num != number) ? number : outStat(num);
	}
	
	public static void main(String[] args){
		launch(args);
	}
}
